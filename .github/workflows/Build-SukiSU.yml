name: Build OnePlus_Kernel
on:
  workflow_dispatch:
    inputs:

      kernelsu_variant:
        description: "选择 KSU"
        required: true
        type: choice
        options:
          - Kernel
          - SukiSU
        default: SukiSU
      kernelsu_version:
        description: "选择 KSU 版本"
        required: true
        type: choice
        options:
          - without ksu
          - tag
          - main
        default: main
      SUSFS_ENABLED:
        description: "添加 SUSFS"
        required: true
        type: boolean
        default: true
      VFS_patch_ENABLED:
        description: "添加 vfs 补丁（新钩子）？"
        required: true
        type: choice
        options:
          - enable
          - disable
        default: enable
jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Maximize build space
        uses: easimon/maximize-build-space@master
        with:
          root-reserve-mb: 8192
          temp-reserve-mb: 2048
          remove-dotnet: 'true'
          remove-android: 'true'
          remove-haskell: 'true'
          remove-codeql: 'true'

      - name: Configure Git
        run: |
         git config --global user.name "Steven"
         git config --global user.email "rshinesun@gmail.com"

      - name: Install dependencies
        run: |
         sudo apt update
         sudo apt install -y python3 git curl
        

      - name: Install repo tool
        run: |
         curl https://storage.googleapis.com/git-repo-downloads/repo > ~/repo
         chmod a+x ~/repo
         sudo mv ~/repo /usr/local/bin/repo

      - name: Initialize repo and sync
        run: |
         mkdir kernel_workspace && cd kernel_workspace
         repo init -u https://github.com/OnePlusOSS/kernel_manifest.git -b refs/heads/oneplus/sm8750 -m oneplus_13.xml --depth=1
         repo sync
         sed -i 's/ -steven//g' kernel_platform/common/scripts/setlocalversion
         sed -i 's/ -steven//g' kernel_platform/msm-kernel/scripts/setlocalversion
         git clone https://android.googlesource.com/kernel/prebuilts/build-tools -b main-kernel-build-2024 --depth 1 kernel-build-tools
         git clone https://android.googlesource.com/platform/system/tools/mkbootimg -b main-kernel-build-2024 --depth 1 mkbootimg
         echo "AVBTOOL=$GITHUB_WORKSPACE/kernel-build-tools/linux-x86/bin/avbtool" >> $GITHUB_ENV
         echo "MKBOOTIMG=$GITHUB_WORKSPACE/mkbootimg/mkbootimg.py" >> $GITHUB_ENV 

      - name: Add KernelSU-SukiSU
        run: |
          cd kernel_workspace/kernel_platform
          curl -LSs "https://raw.githubusercontent.com/ShirkNeko/SukiSU-Ultra/main/kernel/setup.sh" | susfs-dev
          cd ./KernelSU
          KSU_VERSION=$(expr $(/usr/bin/git rev-list --count main) "+" 10606)
          echo "KSUVER=$KSU_VERSION" >> $GITHUB_ENV
          export KSU_VERSION=$KSU_VERSION
          sed -i "s/DKSU_VERSION=12500/DKSU_VERSION=${KSU_VERSION}/" kernel/Makefile
          
      - name: Apply SUSFS Patches SukiSU
        run: |
          cd kernel_workspace
          git clone https://gitlab.com/simonpunk/susfs4ksu.git -b gki-android15-6.6
          git clone https://github.com/ShirkNeko/SukiSU_patch.git
          git clone https://github.com/rshinesun/Action_OnePlus_MKSU_SUSFS
          cd kernel_platform

          # Copy SUSFS patches
          cp ../Action_OnePlus_MKSU_SUSFS/50_add_susfs_in_gki-android15-6.6.patch ./common/
          cp ../susfs4ksu/kernel_patches/fs/* ./common/fs/
          cp ../susfs4ksu/kernel_patches/include/linux/* ./common/include/linux/
           zram lz4kd
          cp -r ../SukiSU_patch/other/lz4k/include/linux/* ./common/include/linux
          cp -r ../SukiSU_patch/other/lz4k/lib/* ./common/lib
          cp -r ../SukiSU_patch/other/lz4k/crypto/* ./common/crypto
          
          echo "正在给内核打susfs补丁"
          cd ./common
          patch -p1 < 50_add_susfs_in_gki-android15-6.6.patch || true
          echo "完成"
          
      - name: Apply Hide Stuff Patches
        if: ${{ github.event.inputs.SUSFS_ENABLED == 'true' }}
        run: |
          cd kernel_workspace/kernel_platform/common
          cp ../../SukiSU_patch/69_hide_stuff.patch ./
          echo "正在打隐藏应用补丁"
          patch -p1 -F 3 < 69_hide_stuff.patch
         
      - name: Apply New Hooks Patches
        if: ${{ github.event.inputs.VFS_patch_ENABLED == 'enable' }}
        run: |
          cd kernel_workspace/kernel_platform/common
          cp ../../SukiSU_patch/hooks/new_hooks.patch ./
          echo "正在打vfs补丁"
          patch -p1 -F 3 < new_hooks.patch
          echo "完成"

          echo "正在打lz4kd补丁"
          cp ../../SukiSU_patch/other/lz4k_patch/6.6/lz4kd.patch ./
          patch -p1 -F 3 < lz4kd.patch || true

      - name: Add SUSFS Configuration Settings
        run: |
          cd kernel_workspace/kernel_platform
          # Add KSU configuration settings
          echo "CONFIG_KSU=y" >> ./common/arch/arm64/configs/gki_defconfig
          echo "CONFIG_KPM=y" >> ./common/arch/arm64/configs/gki_defconfig
          # Add VFS configuration settings
          echo "CONFIG_KSU_SUSFS_SUS_SU=n" >> ./common/arch/arm64/configs/gki_defconfig
          echo "CONFIG_KSU_MANUAL_HOOK=y" >> ./common/arch/arm64/configs/gki_defconfig
          # Add SUSFS configuration settings
          echo "CONFIG_KSU_SUSFS=y" >> ./common/arch/arm64/configs/gki_defconfig
          echo "CONFIG_KSU_SUSFS_HAS_MAGIC_MOUNT=y" >> ./common/arch/arm64/configs/gki_defconfig
          echo "CONFIG_KSU_SUSFS_SUS_PATH=y" >> ./common/arch/arm64/configs/gki_defconfig
          echo "CONFIG_KSU_SUSFS_SUS_MOUNT=y" >> ./common/arch/arm64/configs/gki_defconfig
          echo "CONFIG_KSU_SUSFS_AUTO_ADD_SUS_KSU_DEFAULT_MOUNT=y" >> ./common/arch/arm64/configs/gki_defconfig
          echo "CONFIG_KSU_SUSFS_AUTO_ADD_SUS_BIND_MOUNT=y" >> ./common/arch/arm64/configs/gki_defconfig
          echo "CONFIG_KSU_SUSFS_SUS_KSTAT=y" >> ./common/arch/arm64/configs/gki_defconfig
          echo "CONFIG_KSU_SUSFS_SUS_OVERLAYFS=n" >> ./common/arch/arm64/configs/gki_defconfig
          echo "CONFIG_KSU_SUSFS_TRY_UMOUNT=y" >> ./common/arch/arm64/configs/gki_defconfig
          echo "CONFIG_KSU_SUSFS_AUTO_ADD_TRY_UMOUNT_FOR_BIND_MOUNT=y" >> ./common/arch/arm64/configs/gki_defconfig
          echo "CONFIG_KSU_SUSFS_SPOOF_UNAME=y" >> ./common/arch/arm64/configs/gki_defconfig
          echo "CONFIG_KSU_SUSFS_ENABLE_LOG=y" >> ./common/arch/arm64/configs/gki_defconfig
          echo "CONFIG_KSU_SUSFS_HIDE_KSU_SUSFS_SYMBOLS=y" >> ./common/arch/arm64/configs/gki_defconfig
          echo "CONFIG_KSU_SUSFS_SPOOF_CMDLINE_OR_BOOTCONFIG=y" >> ./common/arch/arm64/configs/gki_defconfig
          echo "CONFIG_KSU_SUSFS_OPEN_REDIRECT=y" >> ./common/arch/arm64/configs/gki_defconfig

          echo "CONFIG_ZRAM_WRITEBACK=y" >> ./common/arch/arm64/configs/gki_defconfig
          echo "CONFIG_CRYPTO_LZ4K=y" >> ./common/arch/arm64/configs/gki_defconfig
          echo "CONFIG_CRYPTO_LZ4KD=y" >> ./common/arch/arm64/configs/gki_defconfig
          echo "CONFIG_CRYPTO_LZ4HC=y" >> ./common/arch/arm64/configs/gki_defconfig
          echo "CONFIG_CRYPTO_842=y" >> ./common/arch/arm64/configs/gki_defconfig
          
          # Remove check_defconfig
          sed -i 's/check_defconfig//' ./common/build.config.gki
  
      - name: Build kernel
        run: |
          cd kernel_workspace
          LTO=thin ./kernel_platform/oplus/build/oplus_build_kernel.sh sun gki
          cp ./out/dist/boot.img ./boot.img
          cp ./out/dist/system_dlkm.flatten.erofs.img ./system_dlkm.flatten.erofs.img

      - name: 打Kpm补丁
        run: |
          cd kernel_workspace
          openssl genpkey -algorithm RSA -pkeyopt rsa_keygen_bits:2048 > ./kernel-build-tools/linux-x86/share/avb/testkey_rsa2048.pem
          echo "BOOT_SIGN_KEY_PATH=$GITHUB_WORKSPACE/kernel-build-tools/linux-x86/share/avb/testkey_rsa2048.pem" >> $GITHUB_ENV
          cd ./out/dist
          curl -LSs "https://raw.githubusercontent.com/ShirkNeko/SukiSU_patch/refs/heads/main/kpm/patch_linux" -o patch
          chmod 777 patch
          $MKBOOTIMG --header_version 4 --kernel oImage --output oboot.img
          $AVBTOOL add_hash_footer --partition_name boot --partition_size $((64 * 1024 * 1024)) --image oboot.img --algorithm SHA256_RSA2048 --key $BOOT_SIGN_KEY_PATH
          cp ./oboot.img ../../boot-kpm.img
      
      - name: 上传编译资产
        uses: actions/upload-artifact@v4
        with:
          name: kernel-${{ env.CONFIG }}
          path: |
            *.img
